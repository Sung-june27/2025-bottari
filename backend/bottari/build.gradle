plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-metrics:3.4.0'
    implementation "ch.qos.logback:logback-classic:1.5.18"
    implementation 'com.google.firebase:firebase-admin:9.5.0'
    implementation 'io.github.vaneproject:badwordfiltering:1.0.0'
    implementation('org.springframework.boot:spring-boot-starter-actuator') {
        // Actuator가 자체적으로 Trace를 생성하는 것을 막기 위해
        exclude group: 'io.micrometer', module: 'micrometer-tracing'
        // Micrometer Tracing 관련 모듈을 명시적으로 제외합니다.
        exclude group: 'io.micrometer', module: 'micrometer-tracing-bridge-brave'
    }
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
